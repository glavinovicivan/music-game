//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""GameControls"",
            ""id"": ""d12b47cb-9ab5-4b0a-a37b-7d10f950ab45"",
            ""actions"": [
                {
                    ""name"": ""1st Tone"",
                    ""type"": ""Button"",
                    ""id"": ""d0fd65b0-b299-4337-8147-bd1bb4c543b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""2nd Tone"",
                    ""type"": ""Button"",
                    ""id"": ""1b94cdb0-5f13-48ff-a1ca-262562091483"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""3rd Tone"",
                    ""type"": ""Button"",
                    ""id"": ""c514713b-600e-415f-b2cc-59733751f1f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""4th Tone"",
                    ""type"": ""Button"",
                    ""id"": ""1d014d0d-43ca-46e8-9fbe-0c12e47ef88b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""5th Tone"",
                    ""type"": ""Button"",
                    ""id"": ""26f0d1e5-bc9a-43d0-8d2e-5fd19dea4417"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""6th Tone"",
                    ""type"": ""Button"",
                    ""id"": ""86ed421d-ed6e-4244-a57b-385211e3f352"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""7th Tone"",
                    ""type"": ""Button"",
                    ""id"": ""226ec84f-9d85-49cf-90a5-047bb205d68f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AdvanceRecordingPhase"",
                    ""type"": ""Button"",
                    ""id"": ""de8c429f-74ad-444f-a335-cc26486b7a64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UndoRecording"",
                    ""type"": ""Button"",
                    ""id"": ""4e86774f-b15e-48e5-a1d0-5a420b56431b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextInstrument"",
                    ""type"": ""Button"",
                    ""id"": ""00db23b2-5df3-4472-b2ca-c37ee2403c41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaySong"",
                    ""type"": ""Button"",
                    ""id"": ""d0141721-bd8d-46c6-9855-0f95e24852ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d3cc00fa-c999-4940-a432-981ba7e4374e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1st Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dec950e3-aa70-4ef5-9a16-9f570fe7dc35"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2nd Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0841f5b3-d7c3-4a94-bcaa-ed8a207e68db"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3rd Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0ba60da-ee23-4e98-b119-31d41b974663"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4th Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc002f55-e040-418e-88f5-10aaf448fe9c"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""5th Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91020016-6367-4c26-8fce-dd489832f588"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""6th Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c0040ff-5727-4202-a77e-ca1ba90aa826"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""7th Tone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5631747d-b7fd-4647-bb0a-d8745c999223"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AdvanceRecordingPhase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76138cd4-c78d-4741-998a-71364278bacb"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UndoRecording"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59114d69-2d56-43b8-bc66-55f91e549777"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextInstrument"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cc1016e-2f66-460b-9773-a584dd257e35"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaySong"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WalkControls"",
            ""id"": ""afec8d31-d6de-4631-a465-ee0b4773acaa"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""063c821f-09c1-40c8-b6fe-875118de8c70"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InitiateTalk"",
                    ""type"": ""Button"",
                    ""id"": ""c0c25886-01d8-4b61-87b9-2ff6d905a0ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9d13f0e9-c654-47a0-b660-a71cda19d263"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""01a460d6-9335-479a-9898-1b3ad7d250b4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1833c0fb-05c1-4fb5-9918-93450713f7ca"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""13a6ff8d-b331-4e60-921f-7ae3991d4c27"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c8d6810c-b87a-451b-9583-148f0f1046f6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9fd6446b-0c35-46fa-b0db-8bc39fda6f99"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InitiateTalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameControls
        m_GameControls = asset.FindActionMap("GameControls", throwIfNotFound: true);
        m_GameControls__1stTone = m_GameControls.FindAction("1st Tone", throwIfNotFound: true);
        m_GameControls__2ndTone = m_GameControls.FindAction("2nd Tone", throwIfNotFound: true);
        m_GameControls__3rdTone = m_GameControls.FindAction("3rd Tone", throwIfNotFound: true);
        m_GameControls__4thTone = m_GameControls.FindAction("4th Tone", throwIfNotFound: true);
        m_GameControls__5thTone = m_GameControls.FindAction("5th Tone", throwIfNotFound: true);
        m_GameControls__6thTone = m_GameControls.FindAction("6th Tone", throwIfNotFound: true);
        m_GameControls__7thTone = m_GameControls.FindAction("7th Tone", throwIfNotFound: true);
        m_GameControls_AdvanceRecordingPhase = m_GameControls.FindAction("AdvanceRecordingPhase", throwIfNotFound: true);
        m_GameControls_UndoRecording = m_GameControls.FindAction("UndoRecording", throwIfNotFound: true);
        m_GameControls_NextInstrument = m_GameControls.FindAction("NextInstrument", throwIfNotFound: true);
        m_GameControls_PlaySong = m_GameControls.FindAction("PlaySong", throwIfNotFound: true);
        // WalkControls
        m_WalkControls = asset.FindActionMap("WalkControls", throwIfNotFound: true);
        m_WalkControls_Movement = m_WalkControls.FindAction("Movement", throwIfNotFound: true);
        m_WalkControls_InitiateTalk = m_WalkControls.FindAction("InitiateTalk", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameControls
    private readonly InputActionMap m_GameControls;
    private List<IGameControlsActions> m_GameControlsActionsCallbackInterfaces = new List<IGameControlsActions>();
    private readonly InputAction m_GameControls__1stTone;
    private readonly InputAction m_GameControls__2ndTone;
    private readonly InputAction m_GameControls__3rdTone;
    private readonly InputAction m_GameControls__4thTone;
    private readonly InputAction m_GameControls__5thTone;
    private readonly InputAction m_GameControls__6thTone;
    private readonly InputAction m_GameControls__7thTone;
    private readonly InputAction m_GameControls_AdvanceRecordingPhase;
    private readonly InputAction m_GameControls_UndoRecording;
    private readonly InputAction m_GameControls_NextInstrument;
    private readonly InputAction m_GameControls_PlaySong;
    public struct GameControlsActions
    {
        private @InputActions m_Wrapper;
        public GameControlsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @_1stTone => m_Wrapper.m_GameControls__1stTone;
        public InputAction @_2ndTone => m_Wrapper.m_GameControls__2ndTone;
        public InputAction @_3rdTone => m_Wrapper.m_GameControls__3rdTone;
        public InputAction @_4thTone => m_Wrapper.m_GameControls__4thTone;
        public InputAction @_5thTone => m_Wrapper.m_GameControls__5thTone;
        public InputAction @_6thTone => m_Wrapper.m_GameControls__6thTone;
        public InputAction @_7thTone => m_Wrapper.m_GameControls__7thTone;
        public InputAction @AdvanceRecordingPhase => m_Wrapper.m_GameControls_AdvanceRecordingPhase;
        public InputAction @UndoRecording => m_Wrapper.m_GameControls_UndoRecording;
        public InputAction @NextInstrument => m_Wrapper.m_GameControls_NextInstrument;
        public InputAction @PlaySong => m_Wrapper.m_GameControls_PlaySong;
        public InputActionMap Get() { return m_Wrapper.m_GameControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameControlsActions set) { return set.Get(); }
        public void AddCallbacks(IGameControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_GameControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameControlsActionsCallbackInterfaces.Add(instance);
            @_1stTone.started += instance.On_1stTone;
            @_1stTone.performed += instance.On_1stTone;
            @_1stTone.canceled += instance.On_1stTone;
            @_2ndTone.started += instance.On_2ndTone;
            @_2ndTone.performed += instance.On_2ndTone;
            @_2ndTone.canceled += instance.On_2ndTone;
            @_3rdTone.started += instance.On_3rdTone;
            @_3rdTone.performed += instance.On_3rdTone;
            @_3rdTone.canceled += instance.On_3rdTone;
            @_4thTone.started += instance.On_4thTone;
            @_4thTone.performed += instance.On_4thTone;
            @_4thTone.canceled += instance.On_4thTone;
            @_5thTone.started += instance.On_5thTone;
            @_5thTone.performed += instance.On_5thTone;
            @_5thTone.canceled += instance.On_5thTone;
            @_6thTone.started += instance.On_6thTone;
            @_6thTone.performed += instance.On_6thTone;
            @_6thTone.canceled += instance.On_6thTone;
            @_7thTone.started += instance.On_7thTone;
            @_7thTone.performed += instance.On_7thTone;
            @_7thTone.canceled += instance.On_7thTone;
            @AdvanceRecordingPhase.started += instance.OnAdvanceRecordingPhase;
            @AdvanceRecordingPhase.performed += instance.OnAdvanceRecordingPhase;
            @AdvanceRecordingPhase.canceled += instance.OnAdvanceRecordingPhase;
            @UndoRecording.started += instance.OnUndoRecording;
            @UndoRecording.performed += instance.OnUndoRecording;
            @UndoRecording.canceled += instance.OnUndoRecording;
            @NextInstrument.started += instance.OnNextInstrument;
            @NextInstrument.performed += instance.OnNextInstrument;
            @NextInstrument.canceled += instance.OnNextInstrument;
            @PlaySong.started += instance.OnPlaySong;
            @PlaySong.performed += instance.OnPlaySong;
            @PlaySong.canceled += instance.OnPlaySong;
        }

        private void UnregisterCallbacks(IGameControlsActions instance)
        {
            @_1stTone.started -= instance.On_1stTone;
            @_1stTone.performed -= instance.On_1stTone;
            @_1stTone.canceled -= instance.On_1stTone;
            @_2ndTone.started -= instance.On_2ndTone;
            @_2ndTone.performed -= instance.On_2ndTone;
            @_2ndTone.canceled -= instance.On_2ndTone;
            @_3rdTone.started -= instance.On_3rdTone;
            @_3rdTone.performed -= instance.On_3rdTone;
            @_3rdTone.canceled -= instance.On_3rdTone;
            @_4thTone.started -= instance.On_4thTone;
            @_4thTone.performed -= instance.On_4thTone;
            @_4thTone.canceled -= instance.On_4thTone;
            @_5thTone.started -= instance.On_5thTone;
            @_5thTone.performed -= instance.On_5thTone;
            @_5thTone.canceled -= instance.On_5thTone;
            @_6thTone.started -= instance.On_6thTone;
            @_6thTone.performed -= instance.On_6thTone;
            @_6thTone.canceled -= instance.On_6thTone;
            @_7thTone.started -= instance.On_7thTone;
            @_7thTone.performed -= instance.On_7thTone;
            @_7thTone.canceled -= instance.On_7thTone;
            @AdvanceRecordingPhase.started -= instance.OnAdvanceRecordingPhase;
            @AdvanceRecordingPhase.performed -= instance.OnAdvanceRecordingPhase;
            @AdvanceRecordingPhase.canceled -= instance.OnAdvanceRecordingPhase;
            @UndoRecording.started -= instance.OnUndoRecording;
            @UndoRecording.performed -= instance.OnUndoRecording;
            @UndoRecording.canceled -= instance.OnUndoRecording;
            @NextInstrument.started -= instance.OnNextInstrument;
            @NextInstrument.performed -= instance.OnNextInstrument;
            @NextInstrument.canceled -= instance.OnNextInstrument;
            @PlaySong.started -= instance.OnPlaySong;
            @PlaySong.performed -= instance.OnPlaySong;
            @PlaySong.canceled -= instance.OnPlaySong;
        }

        public void RemoveCallbacks(IGameControlsActions instance)
        {
            if (m_Wrapper.m_GameControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_GameControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameControlsActions @GameControls => new GameControlsActions(this);

    // WalkControls
    private readonly InputActionMap m_WalkControls;
    private List<IWalkControlsActions> m_WalkControlsActionsCallbackInterfaces = new List<IWalkControlsActions>();
    private readonly InputAction m_WalkControls_Movement;
    private readonly InputAction m_WalkControls_InitiateTalk;
    public struct WalkControlsActions
    {
        private @InputActions m_Wrapper;
        public WalkControlsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_WalkControls_Movement;
        public InputAction @InitiateTalk => m_Wrapper.m_WalkControls_InitiateTalk;
        public InputActionMap Get() { return m_Wrapper.m_WalkControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WalkControlsActions set) { return set.Get(); }
        public void AddCallbacks(IWalkControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_WalkControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WalkControlsActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @InitiateTalk.started += instance.OnInitiateTalk;
            @InitiateTalk.performed += instance.OnInitiateTalk;
            @InitiateTalk.canceled += instance.OnInitiateTalk;
        }

        private void UnregisterCallbacks(IWalkControlsActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @InitiateTalk.started -= instance.OnInitiateTalk;
            @InitiateTalk.performed -= instance.OnInitiateTalk;
            @InitiateTalk.canceled -= instance.OnInitiateTalk;
        }

        public void RemoveCallbacks(IWalkControlsActions instance)
        {
            if (m_Wrapper.m_WalkControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWalkControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_WalkControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WalkControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WalkControlsActions @WalkControls => new WalkControlsActions(this);
    public interface IGameControlsActions
    {
        void On_1stTone(InputAction.CallbackContext context);
        void On_2ndTone(InputAction.CallbackContext context);
        void On_3rdTone(InputAction.CallbackContext context);
        void On_4thTone(InputAction.CallbackContext context);
        void On_5thTone(InputAction.CallbackContext context);
        void On_6thTone(InputAction.CallbackContext context);
        void On_7thTone(InputAction.CallbackContext context);
        void OnAdvanceRecordingPhase(InputAction.CallbackContext context);
        void OnUndoRecording(InputAction.CallbackContext context);
        void OnNextInstrument(InputAction.CallbackContext context);
        void OnPlaySong(InputAction.CallbackContext context);
    }
    public interface IWalkControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInitiateTalk(InputAction.CallbackContext context);
    }
}
